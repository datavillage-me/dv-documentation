openapi: 3.0.0
info:
  title: DataEngine API
  version: latest
servers:
  - url: https://<data-engine>
tags:
  - name: Quality
    description: Monitor the data quality
paths:
  /collaborators/{collaboratorId}:
    get:
      summary: Status of a collaborator in the data engine
      operationId: CollaboratorStatus
      parameters:
        - in: path
          name: collaboratorId
          schema:
            type: string
          required: true
          description: The ID of the requested collaborator.
      responses:
        '200':
          description: Got status of collaborator.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '404':
          $ref: '#/components/responses/Err404NotFound'
    post:
      summary: Mount a new collaborator
      operationId: MountCollaborator
      parameters:
        - in: path
          name: collaboratorId
          schema:
            type: string
          required: true
          description: The ID of the requested collaborator.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-ogen-name: Columns
              properties:
                columns:
                  description: The columns to create for a data consumer. This is ignored for data providers.
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      type:
                        type: string
                        enum:
                          - VARCHAR
                          - DOUBLE
                          - INTEGER
                          - BOOLEAN
                          - TIMESTAMP
                    required:
                      - name
                      - type
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          $ref: '#/components/responses/Err400BadRequest'
        '404':
          $ref: '#/components/responses/Err404NotFound'
    delete:
      summary: Unmount a collaborator
      operationId: UnmountCollaborator
      parameters:
        - in: path
          name: collaboratorId
          schema:
            type: string
          required: true
          description: The ID of the requested collaborator.
      responses:
        '200':
          description: Succesfully started unmounting process.
        '404':
          $ref: '#/components/responses/Err404NotFound'
  /collaborators/{collaboratorId}/query:
    get:
      summary: Query on a collaborator
      operationId: QueryCollaborator
      parameters:
        - in: path
          name: collaboratorId
          schema:
            type: string
          required: true
          description: The ID of the requested collaborator.
      requestBody:
        description: |
          The query to be made
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                select:
                  description: If no select clause is passed it will be interpreted as "SELECT *"
                  type: array
                  items:
                    x-ogen-name: SelectProperty
                    type: object
                    properties:
                      property:
                        $ref: '#/components/schemas/Property'
                      alias:
                        type: string
                    required:
                      - property
                where:
                  $ref: '#/components/schemas/Expression'
                limit:
                  type: number
                  format: int32
                join:
                  type: array
                  items:
                    x-ogen-name: Join
                    type: object
                    properties:
                      joinCollaboratorId:
                        type: string
                      joinOn:
                        $ref: '#/components/schemas/Equal'
                    required:
                      - joinCollaboratorId
                      - joinOn
      responses:
        '200':
          description: Succesfully executed the query
          content:
            text/csv:
              schema:
                type: string
        '400':
          $ref: '#/components/responses/Err400BadRequest'
        '404':
          $ref: '#/components/responses/Err404NotFound'
  /collaborators/{collaboratorId}/append:
    post:
      summary: Append data on a Data Consumer
      operationId: AppendCollaborator
      parameters:
        - in: path
          name: collaboratorId
          schema:
            type: string
          required: true
          description: The ID of the data consumer to append data to.
      requestBody:
        description: The data to append, formatted as CSV.
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                data:
                  type: string
                  format: binary
                  description: The comma separated values to insert in the table of the data consumer.
              required:
                - data
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          $ref: '#/components/responses/Err400BadRequest'
        '404':
          $ref: '#/components/responses/Err404NotFound'
  /collaborators/{collaboratorId}/export:
    post:
      summary: Export Data Consumer
      operationId: ExportCollaborator
      parameters:
        - in: path
          name: collaboratorId
          schema:
            type: string
          required: true
          description: The ID of the data consumer to export.
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          $ref: '#/components/responses/Err400BadRequest'
        '404':
          $ref: '#/components/responses/Err404NotFound'
  /collaborators/{collaboratorId}/quality:
    get:
      summary: Get Collaborator Reports
      operationId: GetCollaboratorReports
      tags:
        - Quality
      parameters:
        - in: path
          name: collaboratorId
          schema:
            type: string
          required: true
          description: The ID of the collaborator to get the quality reports.
      responses:
        '200':
          description: Overview of all started quality checks for the collaborator.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QualityReportSummary'
        '400':
          $ref: '#/components/responses/Err400BadRequest'
        '404':
          $ref: '#/components/responses/Err404NotFound'
    post:
      summary: Start Quality Validation
      operationId: StartQualityValidation
      tags:
        - Quality
      parameters:
        - in: path
          name: collaboratorId
          schema:
            type: string
          required: true
          description: The ID of the collaborator to perform the quality checks.
      responses:
        '201':
          $ref: '#/components/responses/CreatedResource'
        '400':
          $ref: '#/components/responses/Err400BadRequest'
        '404':
          $ref: '#/components/responses/Err404NotFound'
  /quality-report/{reportId}:
    get:
      summary: Get Quality Report
      operationId: GetQualityReport
      tags:
        - Quality
      parameters:
        - in: path
          name: reportId
          schema:
            type: string
          required: true
          description: The ID of the quality report.
      responses:
        '200':
          description: The quality report.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QualityReport'
        '404':
          $ref: '#/components/responses/Err404NotFound'
components:
  schemas:
    StatusUnmounted:
      type: object
      title: Unmounted
      properties:
        status:
          type: string
          enum:
            - unmounted
    StatusInitialized:
      type: object
      title: Initialized
      properties:
        status:
          type: string
          enum:
            - initialized
        initialized:
          type: string
          format: date-time
      required:
        - initialized
    StatusWriting:
      type: object
      title: Writing
      properties:
        status:
          type: string
          enum:
            - writing
        initialized:
          type: string
          format: date-time
        writeStart:
          type: string
          format: date-time
      required:
        - initialized
        - writeStart
    StatusMounted:
      type: object
      title: Mounted
      properties:
        status:
          type: string
          enum:
            - mounted
        initialized:
          type: string
          format: date-time
        writeStart:
          type: string
          format: date-time
        mounted:
          type: string
          format: date-time
      required:
        - initialized
        - writeStart
        - mounted
    StatusExporting:
      type: object
      title: Exporting
      properties:
        status:
          type: string
          enum:
            - exporting
        initialized:
          type: string
          format: date-time
        writeStart:
          type: string
          format: date-time
        mounted:
          type: string
          format: date-time
        exportStart:
          type: string
          format: date-time
      required:
        - initialized
        - writeStart
        - mounted
        - exportStart
    StatusExported:
      type: object
      title: Exported
      properties:
        status:
          type: string
          enum:
            - exported
        initialized:
          type: string
          format: date-time
        writeStart:
          type: string
          format: date-time
        mounted:
          type: string
          format: date-time
        exportStart:
          type: string
          format: date-time
        exported:
          type: string
          format: date-time
      required:
        - initialized
        - writeStart
        - mounted
        - exportStart
        - exported
    StatusError:
      type: object
      title: Error
      properties:
        status:
          type: string
          enum:
            - error
        error:
          type: string
      required:
        - error
    Status:
      type: object
      description: Status
      title: Status
      allOf:
        - discriminator:
            propertyName: status
            mapping:
              unmounted: '#/components/schemas/StatusUnmounted'
              initialized: '#/components/schemas/StatusInitialized'
              writing: '#/components/schemas/StatusWriting'
              mounted: '#/components/schemas/StatusMounted'
              exporting: '#/components/schemas/StatusExporting'
              exported: '#/components/schemas/StatusExported'
              error: '#/components/schemas/StatusError'
        - oneOf:
            - $ref: '#/components/schemas/StatusUnmounted'
            - $ref: '#/components/schemas/StatusInitialized'
            - $ref: '#/components/schemas/StatusWriting'
            - $ref: '#/components/schemas/StatusMounted'
            - $ref: '#/components/schemas/StatusExporting'
            - $ref: '#/components/schemas/StatusExported'
            - $ref: '#/components/schemas/StatusError'
    Property:
      type: object
      properties:
        collaboratorId:
          type: string
        property:
          type: string
      required:
        - property
    Expression:
      oneOf:
        - $ref: '#/components/schemas/Equal'
        - $ref: '#/components/schemas/Property'
        - x-ogen-name: LiteralString
          type: object
          properties:
            stringValue:
              type: string
          required:
            - stringValue
        - x-ogen-name: LiteralInteger
          type: object
          properties:
            intValue:
              type: integer
          required:
            - intValue
        - $ref: '#/components/schemas/GreaterThan'
    Equal:
      type: object
      properties:
        equalA:
          $ref: '#/components/schemas/Expression'
        equalB:
          $ref: '#/components/schemas/Expression'
    GreaterThan:
      x-ogen-name: GreaterThan
      type: object
      properties:
        gtA:
          $ref: '#/components/schemas/Expression'
        gtB:
          $ref: '#/components/schemas/Expression'
    QualityReportPending:
      type: object
      title: Pending
      x-ogen-name: PendingQualityReport
      properties:
        id:
          type: string
        status:
          type: string
          enum:
            - pending
        collaboratorId:
          type: string
        mount:
          type: string
          format: date-time
        start:
          type: string
          format: date-time
      required:
        - id
        - collaboratorId
        - mount
        - start
        - status
    QualityReportSummaryFinished:
      type: object
      title: Finished
      x-ogen-name: FinishedQualityReportSummary
      properties:
        id:
          type: string
        status:
          type: string
          enum:
            - finished
        collaboratorId:
          type: string
        mount:
          type: string
          format: date-time
        start:
          type: string
          format: date-time
        finish:
          type: string
          format: date-time
        success:
          type: integer
        fail:
          type: integer
        error:
          type: integer
      required:
        - id
        - status
        - collaboratorId
        - mount
        - start
        - finish
        - success
        - fail
        - error
    QualityReportSummary:
      type: object
      x-ogen-name: QualityReportSummary
      title: Quality Report (summary)
      description: Summary of a quality report.
      allOf:
        - discriminator:
            propertyName: status
            mapping:
              pending: '#/components/schemas/QualityReportPending'
              finished: '#/components/schemas/QualityReportSummaryFinished'
        - oneOf:
            - $ref: '#/components/schemas/QualityReportPending'
            - $ref: '#/components/schemas/QualityReportSummaryFinished'
    QualityReportFinished:
      type: object
      title: Finished
      x-ogen-name: FinishedQualityReport
      properties:
        id:
          type: string
        status:
          type: string
          enum:
            - finished
        collaboratorId:
          type: string
        mount:
          type: string
          format: date-time
        start:
          type: string
          format: date-time
        finish:
          type: string
          format: date-time
        success:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              duration:
                type: integer
                description: Duration of the test in ms.
            required:
              - name
              - duration
        fail:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              duration:
                type: integer
                description: Duration of the test in ms.
              message:
                type: string
            required:
              - name
              - duration
              - message
        error:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              duration:
                type: integer
                description: Duration of the test in ms.
              message:
                type: string
            required:
              - name
              - duration
              - message
      required:
        - id
        - status
        - collaboratorId
        - mount
        - start
        - finish
        - success
        - fail
        - error
    QualityReport:
      type: object
      x-ogen-name: QualityReport
      title: Quality Report
      Description: Quality Report
      allOf:
        - discriminator:
            propertyName: status
            mapping:
              pending: '#/components/schemas/QualityReportPending'
              finished: '#/components/schemas/QualityReportFinished'
        - oneOf:
            - $ref: '#/components/schemas/QualityReportPending'
            - $ref: '#/components/schemas/QualityReportFinished'
  responses:
    Err404NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            type: object
            properties:
              error_message:
                type: string
                default: Document not found
            required:
              - error_message
    NoContent:
      description: Request handled sucesfully
    Err400BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            type: object
            properties:
              error_message:
                type: string
                default: Bad request
            required:
              - error_message
    CreatedResource:
      description: Resource was created successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: string
            required:
              - id
      headers:
        Location:
          required: true
          schema:
            type: string
