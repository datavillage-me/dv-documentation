openapi: 3.0.0
info:
  title: ControlPlane API
  version: latest
servers:
  - url: https://<cage-manager-api>
security:
  - bearerAuth: []
tags:
  - name: collaboration-spaces
    description: Collaboration Spaces
  - name: auth
    description: Authentication
paths:
  /auth/currentCredentials:
    get:
      operationId: getCurrentCredentials
      tags:
        - auth
      description: Get your current credentials
      responses:
        '200':
          description: The developer that is logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Developer'
  /collaborationSpaces:
    get:
      operationId: getCollaborationSpaces
      tags:
        - collaboration-spaces
      description: Get all spaces your account has access to.
      responses:
        '200':
          description: A JSON array of collaboration spaces
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CollaborationSpace'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /collaborationSpaces/{spaceId}:
    get:
      operationId: getCollaborationSpace
      tags:
        - collaboration-spaces
      summary: Get a specific collaboration space
      description: |
        This fetches a collaboration space, if you have access to this space. The necessary roles for this are:
          * abc
      parameters:
        - in: path
          name: spaceId
          schema:
            type: string
          required: true
          description: Id of the collaboration space to get
      responses:
        '200':
          description: A JSON object representing a collaboration space
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollaborationSpace'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
  /collaborationSpaces/{spaceId}/collaborators:
    get:
      operationId: getCollaborationSpaceCollaborators
      tags:
        - collaboration-spaces
      summary: Get the list of collaborators of a specific collaboration space
      description: |
        This fetches a collaboration space, if you have access to this space. You have access to a collaboration space when your client is part of this space.
      parameters:
        - in: path
          name: spaceId
          schema:
            type: string
          required: true
          description: Id of the collaboration space to get
      responses:
        '200':
          description: An array containing the collaborators of a space
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Collaborator'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
components:
  schemas:
    CollaborationSpace:
      type: object
      required:
        - id
        - name
        - owner
      properties:
        id:
          type: string
        name:
          type: string
        owner:
          type: string
        category:
          type: string
        collaborators:
          type: array
          items:
            $ref: '#/components/schemas/Collaborator'
    Collaborator:
      description: Collaborator
      discriminator:
        propertyName: role
        mapping:
          CodeProvider: '#/components/schemas/CodeProvider'
          DataProvider: '#/components/schemas/DataProvider'
          DataConsumer: '#/components/schemas/DataConsumer'
      oneOf:
        - $ref: '#/components/schemas/CodeProvider'
        - $ref: '#/components/schemas/DataProvider'
        - $ref: '#/components/schemas/DataConsumer'
    CodeProvider:
      allOf:
        - $ref: '#/components/schemas/AbstractCollaborator'
        - type: object
          description: Someone who provides code
          properties:
            role:
              type: string
              example: CodeProvider
            algoSettings:
              type: object
              properties:
                test:
                  type: string
    DataProvider:
      allOf:
        - $ref: '#/components/schemas/AbstractCollaborator'
        - type: object
          description: Someone who provides Data
          properties:
            role:
              type: string
              example: DataProvider
    DataConsumer:
      allOf:
        - $ref: '#/components/schemas/AbstractCollaborator'
        - type: object
          description: Someone who consumes data
          properties:
            role:
              type: string
              example: DataConsumer
    Developer:
      type: object
      properties:
        roles:
          type: array
          items:
            type: string
        clientId:
          type: string
      required:
        - clientId
    AbstractCollaborator:
      type: object
      description: Abstract Collaborator
      required:
        - clientId
      properties:
        clientId:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    UnauthorizedError:
      description: User is not authenticated
      content:
        application/json:
          schema:
            type: object
            properties:
              error_message:
                type: string
            required:
              - error_message
    NotFoundError:
      description: Resource not found
      content:
        application/json:
          schema:
            type: object
            properties:
              error_message:
                type: string
            required:
              - error_message
